diff -Napur linux-5.15.103-orig/drivers/net/dsa/microchip/ksz8795.c linux-5.15.103/drivers/net/dsa/microchip/ksz8795.c
--- linux-5.15.103-orig/drivers/net/dsa/microchip/ksz8795.c	2023-03-17 00:49:05.000000000 -0700
+++ linux-5.15.103/drivers/net/dsa/microchip/ksz8795.c	2023-03-20 18:31:35.166529458 -0700
@@ -1516,6 +1516,9 @@ static void ksz8_validate(struct dsa_swi
 			goto unsupported;
 	} else {
 		if (state->interface != PHY_INTERFACE_MODE_INTERNAL &&
+		    state->interface != PHY_INTERFACE_MODE_GMII &&
+		    state->interface != PHY_INTERFACE_MODE_RMII &&
+		    state->interface != PHY_INTERFACE_MODE_MII &&
 		    state->interface != PHY_INTERFACE_MODE_NA)
 			goto unsupported;
 	}
diff -Napur linux-5.15.103-orig/drivers/net/dsa/microchip/ksz8795_spi.c linux-5.15.103/drivers/net/dsa/microchip/ksz8795_spi.c
--- linux-5.15.103-orig/drivers/net/dsa/microchip/ksz8795_spi.c	2023-03-17 00:49:05.000000000 -0700
+++ linux-5.15.103/drivers/net/dsa/microchip/ksz8795_spi.c	2023-09-28 09:10:34.068429942 -0700
@@ -70,12 +70,6 @@ static int ksz8795_spi_probe(struct spi_
 	if (spi->dev.platform_data)
 		dev->pdata = spi->dev.platform_data;
 
-	/* setup spi */
-	spi->mode = SPI_MODE_3;
-	ret = spi_setup(spi);
-	if (ret)
-		return ret;
-
 	ret = ksz8_switch_register(dev);
 
 	/* Main DSA driver may not be started yet. */
diff -Napur linux-5.15.103-orig/drivers/net/dsa/microchip/ksz9477.c linux-5.15.103/drivers/net/dsa/microchip/ksz9477.c
--- linux-5.15.103-orig/drivers/net/dsa/microchip/ksz9477.c	2023-03-17 00:49:05.000000000 -0700
+++ linux-5.15.103/drivers/net/dsa/microchip/ksz9477.c	2023-09-28 09:08:35.197601951 -0700
@@ -1325,6 +1325,8 @@ static void ksz9477_config_cpu_port(stru
 	for (i = 0; i < dev->port_cnt; i++) {
 		if (i == dev->cpu_port)
 			continue;
+		if (dsa_is_unused_port(dev->ds, i))
+			continue;
 		p = &dev->ports[i];
 
 		/* Initialize to non-zero so that ksz_cfg_port_member() will
@@ -1531,6 +1533,16 @@ static const struct ksz_chip_data ksz947
 		.num_vlans = 4096,
 		.num_alus = 4096,
 		.num_statics = 16,
+		.cpu_ports = 0x7F,	/* can be configured as cpu port */
+		.port_cnt = 7,		/* total physical port count */
+		.phy_errata_9477 = true,
+	},
+	{
+		.chip_id = 0x00856700,
+		.dev_name = "KSZ8567",
+		.num_vlans = 4096,
+		.num_alus = 4096,
+		.num_statics = 16,
 		.cpu_ports = 0x7F,	/* can be configured as cpu port */
 		.port_cnt = 7,		/* total physical port count */
 		.phy_errata_9477 = true,
diff -Napur linux-5.15.103-orig/drivers/net/dsa/microchip/ksz9477_i2c.c linux-5.15.103/drivers/net/dsa/microchip/ksz9477_i2c.c
--- linux-5.15.103-orig/drivers/net/dsa/microchip/ksz9477_i2c.c	2023-03-17 00:49:05.000000000 -0700
+++ linux-5.15.103/drivers/net/dsa/microchip/ksz9477_i2c.c	2023-09-28 09:31:35.213545499 -0700
@@ -14,6 +14,62 @@
 
 KSZ_REGMAP_TABLE(ksz9477, not_used, 16, 0, 0);
 
+#ifndef CONFIG_OF
+
+/* Choose one of switches. */
+#if 1
+#define CONFIG_KSZ_7_PORTS
+
+/* Choose which port is host port. */
+#if 1
+#define CONFIG_KSZ_7_PORTS_HOST_6
+#else
+#define CONFIG_KSZ_7_PORTS_HOST_7
+#endif
+#endif
+#if 0
+#define CONFIG_KSZ_6_PORTS
+#endif
+#if 0
+#define CONFIG_KSZ_3_PORTS
+#endif
+
+#if defined(CONFIG_KSZ_6_PORTS) || defined(CONFIG_KSZ_7_PORTS)
+#if defined(CONFIG_KSZ_6_PORTS) || defined(CONFIG_KSZ_7_PORTS_HOST_6)
+#define CONFIG_KSZ_HOST_PORT  5
+#endif
+#if defined(CONFIG_KSZ_7_PORTS) && defined(CONFIG_KSZ_7_PORTS_HOST_7)
+#define CONFIG_KSZ_HOST_PORT  6
+#endif
+
+static struct dsa_chip_data ksz_dsa_chip_data = {
+	.port_names[0]	= "lan1",
+	.port_names[1]	= "lan2",
+	.port_names[2]	= "lan3",
+	.port_names[3]	= "lan4",
+	.port_names[4]	= "lan5",
+#if defined(CONFIG_KSZ_6_PORTS) || defined(CONFIG_KSZ_7_PORTS_HOST_6)
+	.port_names[5]	= "cpu",
+#endif
+#if defined(CONFIG_KSZ_7_PORTS) && defined(CONFIG_KSZ_7_PORTS_HOST_6)
+	.port_names[6]	= "lan6",
+#endif
+#if defined(CONFIG_KSZ_7_PORTS) && defined(CONFIG_KSZ_7_PORTS_HOST_7)
+	.port_names[5]	= "lan6",
+	.port_names[6]	= "cpu",
+#endif
+};
+#endif
+#ifdef CONFIG_KSZ_3_PORTS
+#define CONFIG_KSZ_HOST_PORT  2
+static struct dsa_chip_data ksz_dsa_chip_data = {
+	.port_names[0]	= "lan1",
+	.port_names[1]	= "lan2",
+	.port_names[2]	= "cpu",
+};
+#endif
+#endif
+
 static int ksz9477_i2c_probe(struct i2c_client *i2c,
 			     const struct i2c_device_id *i2c_id)
 {
@@ -25,6 +81,20 @@ static int ksz9477_i2c_probe(struct i2c_
 	if (!dev)
 		return -ENOMEM;
 
+#ifndef CONFIG_OF
+	do {
+		struct net_device *net;
+
+		/* Network device needs to be exist. */
+		net = dev_get_by_name(&init_net, "eth0");
+		if (!net)
+			return -EPROBE_DEFER;
+
+		ksz_dsa_chip_data.netdev[CONFIG_KSZ_HOST_PORT] = &net->dev;
+	} while (0);
+	dev->ds->dev->platform_data = &ksz_dsa_chip_data;
+#endif
+
 	for (i = 0; i < ARRAY_SIZE(ksz9477_regmap_config); i++) {
 		rc = ksz9477_regmap_config[i];
 		rc.lock_arg = &dev->regmap_mutex;
@@ -91,7 +161,11 @@ static const struct of_device_id ksz9477
 	{ .compatible = "microchip,ksz9897" },
 	{ .compatible = "microchip,ksz9893" },
 	{ .compatible = "microchip,ksz9563" },
+	{ .compatible = "microchip,ksz8563" },
 	{ .compatible = "microchip,ksz9567" },
+	{ .compatible = "microchip,ksz8567" },
+	{ .compatible = "microchip,ksz8565" },
+	{ .compatible = "microchip,ksz9656" },
 	{},
 };
 MODULE_DEVICE_TABLE(of, ksz9477_dt_ids);
diff -Napur linux-5.15.103-orig/drivers/net/dsa/microchip/ksz9477_spi.c linux-5.15.103/drivers/net/dsa/microchip/ksz9477_spi.c
--- linux-5.15.103-orig/drivers/net/dsa/microchip/ksz9477_spi.c	2023-03-17 00:49:05.000000000 -0700
+++ linux-5.15.103/drivers/net/dsa/microchip/ksz9477_spi.c	2023-09-28 09:11:08.217440912 -0700
@@ -22,6 +22,62 @@
 KSZ_REGMAP_TABLE(ksz9477, 32, SPI_ADDR_SHIFT,
 		 SPI_TURNAROUND_SHIFT, SPI_ADDR_ALIGN);
 
+#ifndef CONFIG_OF
+
+/* Choose one of switches. */
+#if 1
+#define CONFIG_KSZ_7_PORTS
+
+/* Choose which port is host port. */
+#if 1
+#define CONFIG_KSZ_7_PORTS_HOST_6
+#else
+#define CONFIG_KSZ_7_PORTS_HOST_7
+#endif
+#endif
+#if 0
+#define CONFIG_KSZ_6_PORTS
+#endif
+#if 0
+#define CONFIG_KSZ_3_PORTS
+#endif
+
+#if defined(CONFIG_KSZ_6_PORTS) || defined(CONFIG_KSZ_7_PORTS)
+#if defined(CONFIG_KSZ_6_PORTS) || defined(CONFIG_KSZ_7_PORTS_HOST_6)
+#define CONFIG_KSZ_HOST_PORT  5
+#endif
+#if defined(CONFIG_KSZ_7_PORTS) && defined(CONFIG_KSZ_7_PORTS_HOST_7)
+#define CONFIG_KSZ_HOST_PORT  6
+#endif
+
+static struct dsa_chip_data ksz_dsa_chip_data = {
+	.port_names[0]	= "lan1",
+	.port_names[1]	= "lan2",
+	.port_names[2]	= "lan3",
+	.port_names[3]	= "lan4",
+	.port_names[4]	= "lan5",
+#if defined(CONFIG_KSZ_6_PORTS) || defined(CONFIG_KSZ_7_PORTS_HOST_6)
+	.port_names[5]	= "cpu",
+#endif
+#if defined(CONFIG_KSZ_7_PORTS) && defined(CONFIG_KSZ_7_PORTS_HOST_6)
+	.port_names[6]	= "lan6",
+#endif
+#if defined(CONFIG_KSZ_7_PORTS) && defined(CONFIG_KSZ_7_PORTS_HOST_7)
+	.port_names[5]	= "lan6",
+	.port_names[6]	= "cpu",
+#endif
+};
+#endif
+#ifdef CONFIG_KSZ_3_PORTS
+#define CONFIG_KSZ_HOST_PORT  2
+static struct dsa_chip_data ksz_dsa_chip_data = {
+	.port_names[0]	= "lan1",
+	.port_names[1]	= "lan2",
+	.port_names[2]	= "cpu",
+};
+#endif
+#endif
+
 static int ksz9477_spi_probe(struct spi_device *spi)
 {
 	struct regmap_config rc;
@@ -32,6 +88,20 @@ static int ksz9477_spi_probe(struct spi_
 	if (!dev)
 		return -ENOMEM;
 
+#ifndef CONFIG_OF
+	do {
+		struct net_device *net;
+
+		/* Network device needs to be exist. */
+		net = dev_get_by_name(&init_net, "eth0");
+		if (!net)
+			return -EPROBE_DEFER;
+
+		ksz_dsa_chip_data.netdev[CONFIG_KSZ_HOST_PORT] = &net->dev;
+	} while (0);
+	dev->ds->dev->platform_data = &ksz_dsa_chip_data;
+#endif
+
 	for (i = 0; i < ARRAY_SIZE(ksz9477_regmap_config); i++) {
 		rc = ksz9477_regmap_config[i];
 		rc.lock_arg = &dev->regmap_mutex;
@@ -48,12 +118,6 @@ static int ksz9477_spi_probe(struct spi_
 	if (spi->dev.platform_data)
 		dev->pdata = spi->dev.platform_data;
 
-	/* setup spi */
-	spi->mode = SPI_MODE_3;
-	ret = spi_setup(spi);
-	if (ret)
-		return ret;
-
 	ret = ksz9477_switch_register(dev);
 
 	/* Main DSA driver may not be started yet. */
@@ -94,6 +158,9 @@ static const struct of_device_id ksz9477
 	{ .compatible = "microchip,ksz9563" },
 	{ .compatible = "microchip,ksz8563" },
 	{ .compatible = "microchip,ksz9567" },
+	{ .compatible = "microchip,ksz8567" },
+	{ .compatible = "microchip,ksz8565" },
+	{ .compatible = "microchip,ksz9656" },
 	{},
 };
 MODULE_DEVICE_TABLE(of, ksz9477_dt_ids);
@@ -105,6 +172,9 @@ static const struct spi_device_id ksz947
 	{ "ksz9563" },
 	{ "ksz8563" },
 	{ "ksz9567" },
+	{ "ksz8567" },
+	{ "ksz8565" },
+	{ "ksz9656" },
 	{ },
 };
 MODULE_DEVICE_TABLE(spi, ksz9477_spi_ids);
@@ -129,6 +199,9 @@ MODULE_ALIAS("spi:ksz9893");
 MODULE_ALIAS("spi:ksz9563");
 MODULE_ALIAS("spi:ksz8563");
 MODULE_ALIAS("spi:ksz9567");
+MODULE_ALIAS("spi:ksz8567");
+MODULE_ALIAS("spi:ksz8565");
+MODULE_ALIAS("spi:ksz9656");
 MODULE_AUTHOR("Woojung Huh <Woojung.Huh@microchip.com>");
 MODULE_DESCRIPTION("Microchip KSZ9477 Series Switch SPI access Driver");
 MODULE_LICENSE("GPL");
diff -Napur linux-5.15.103-orig/drivers/net/dsa/microchip/ksz_common.c linux-5.15.103/drivers/net/dsa/microchip/ksz_common.c
--- linux-5.15.103-orig/drivers/net/dsa/microchip/ksz_common.c	2023-03-17 00:49:05.000000000 -0700
+++ linux-5.15.103/drivers/net/dsa/microchip/ksz_common.c	2023-09-28 09:08:12.293212088 -0700
@@ -103,8 +103,11 @@ void ksz_init_mib_timer(struct ksz_devic
 
 	INIT_DELAYED_WORK(&dev->mib_read, ksz_mib_read_work);
 
-	for (i = 0; i < dev->port_cnt; i++)
+	for (i = 0; i < dev->port_cnt; i++) {
+		if (dsa_is_unused_port(dev->ds, i))
+			continue;
 		dev->dev_ops->port_init_cnt(dev, i);
+	}
 }
 EXPORT_SYMBOL_GPL(ksz_init_mib_timer);
 
